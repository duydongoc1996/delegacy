{"version":3,"sources":["../../src/model/MultisigDTO.js"],"names":["MultisigDTO","account","minApproval","minRemoval","cosignatories","multisigAccounts","undefined","accountAddress","data","obj","hasOwnProperty","ApiClient","convertToType"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAcA;;;;;;;;AAMA;;;;;IAKqBA,W;AACjB;;;;;;;;;;;AAWA,yBAAYC,OAAZ,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,aAA9C,EAA6DC,gBAA7D,EAA+E;AAAA;;AAAA,aAoD/EJ,OApD+E,GAoDrEK,SApDqE;AAAA,aAyD/EC,cAzD+E,GAyD9DD,SAzD8D;AAAA,aA8D/EJ,WA9D+E,GA8DjEI,SA9DiE;AAAA,aAmE/EH,UAnE+E,GAmElEG,SAnEkE;AAAA,aAwE/EF,aAxE+E,GAwE/DE,SAxE+D;AAAA,aA6E/ED,gBA7E+E,GA6E5DC,SA7E4D;;;AAM3E,aAAK,SAAL,IAAkBL,OAAlB,CAA0B,KAAK,aAAL,IAAsBC,WAAtB,CAAkC,KAAK,YAAL,IAAqBC,UAArB,CAAgC,KAAK,eAAL,IAAwBC,aAAxB,CAAsC,KAAK,kBAAL,IAA2BC,gBAA3B;AAGrI;;AAED;;;;;;;;;;;4CAO2BG,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIT,WAAJ,EAAb;;AAMA,oBAAIQ,KAAKE,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AAChCD,wBAAI,SAAJ,IAAiBE,oBAAUC,aAAV,CAAwBJ,KAAK,SAAL,CAAxB,EAAyC,QAAzC,CAAjB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,gBAApB,CAAJ,EAA2C;AACvCD,wBAAI,gBAAJ,IAAwBE,oBAAUC,aAAV,CAAwBJ,KAAK,gBAAL,CAAxB,EAAgD,QAAhD,CAAxB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,aAApB,CAAJ,EAAwC;AACpCD,wBAAI,aAAJ,IAAqBE,oBAAUC,aAAV,CAAwBJ,KAAK,aAAL,CAAxB,EAA6C,QAA7C,CAArB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACnCD,wBAAI,YAAJ,IAAoBE,oBAAUC,aAAV,CAAwBJ,KAAK,YAAL,CAAxB,EAA4C,QAA5C,CAApB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,eAApB,CAAJ,EAA0C;AACtCD,wBAAI,eAAJ,IAAuBE,oBAAUC,aAAV,CAAwBJ,KAAK,eAAL,CAAxB,EAA+C,CAAC,QAAD,CAA/C,CAAvB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,kBAApB,CAAJ,EAA6C;AACzCD,wBAAI,kBAAJ,IAA0BE,oBAAUC,aAAV,CAAwBJ,KAAK,kBAAL,CAAxB,EAAkD,CAAC,QAAD,CAAlD,CAA1B;AACH;AACJ;AACD,mBAAOC,GAAP;AACH;;AAED;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;;;;;;kBArFiBT,W","file":"MultisigDTO.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 0.7.15\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\n\n\n\n\n\n/**\n* The MultisigDTO model module.\n* @module model/MultisigDTO\n* @version 0.7.15\n*/\nexport default class MultisigDTO {\n    /**\n    * Constructs a new <code>MultisigDTO</code>.\n    * @alias module:model/MultisigDTO\n    * @class\n    * @param account {String} The account public key.\n    * @param minApproval {Number} The number of signatures needed to approve a transaction.\n    * @param minRemoval {Number} The number of signatures needed to remove a cosignatory.\n    * @param cosignatories {Array.<String>} The array of public keys of the cosignatory accounts.\n    * @param multisigAccounts {Array.<String>} The array of multisig accounts where the account is cosignatory.\n    */\n\n    constructor(account, minApproval, minRemoval, cosignatories, multisigAccounts) {\n        \n\n        \n        \n\n        this['account'] = account;this['minApproval'] = minApproval;this['minRemoval'] = minRemoval;this['cosignatories'] = cosignatories;this['multisigAccounts'] = multisigAccounts;\n\n        \n    }\n\n    /**\n    * Constructs a <code>MultisigDTO</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/MultisigDTO} obj Optional instance to populate.\n    * @return {module:model/MultisigDTO} The populated <code>MultisigDTO</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new MultisigDTO();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('account')) {\n                obj['account'] = ApiClient.convertToType(data['account'], 'String');\n            }\n            if (data.hasOwnProperty('accountAddress')) {\n                obj['accountAddress'] = ApiClient.convertToType(data['accountAddress'], 'String');\n            }\n            if (data.hasOwnProperty('minApproval')) {\n                obj['minApproval'] = ApiClient.convertToType(data['minApproval'], 'Number');\n            }\n            if (data.hasOwnProperty('minRemoval')) {\n                obj['minRemoval'] = ApiClient.convertToType(data['minRemoval'], 'Number');\n            }\n            if (data.hasOwnProperty('cosignatories')) {\n                obj['cosignatories'] = ApiClient.convertToType(data['cosignatories'], ['String']);\n            }\n            if (data.hasOwnProperty('multisigAccounts')) {\n                obj['multisigAccounts'] = ApiClient.convertToType(data['multisigAccounts'], ['String']);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * The account public key.\n    * @member {String} account\n    */\n    account = undefined;\n    /**\n    * The account address in hexadecimal.\n    * @member {String} accountAddress\n    */\n    accountAddress = undefined;\n    /**\n    * The number of signatures needed to approve a transaction.\n    * @member {Number} minApproval\n    */\n    minApproval = undefined;\n    /**\n    * The number of signatures needed to remove a cosignatory.\n    * @member {Number} minRemoval\n    */\n    minRemoval = undefined;\n    /**\n    * The array of public keys of the cosignatory accounts.\n    * @member {Array.<String>} cosignatories\n    */\n    cosignatories = undefined;\n    /**\n    * The array of multisig accounts where the account is cosignatory.\n    * @member {Array.<String>} multisigAccounts\n    */\n    multisigAccounts = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"]}