{"version":3,"sources":["../../src/model/AccountDTO.js"],"names":["AccountDTO","address","addressHeight","publicKey","publicKeyHeight","mosaics","importance","importanceHeight","undefined","data","obj","hasOwnProperty","ApiClient","convertToType","UInt64DTO","constructFromObject","MosaicDTO"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAcA;;;;AACA;;;;AACA;;;;;;;;AAMA;;;;;IAKqBA,U;AACjB;;;;;;;;;;;;;AAaA,wBAAYC,OAAZ,EAAqBC,aAArB,EAAoCC,SAApC,EAA+CC,eAA/C,EAAgEC,OAAhE,EAAyEC,UAAzE,EAAqFC,gBAArF,EAAuG;AAAA;;AAAA,aAwDvGN,OAxDuG,GAwD7FO,SAxD6F;AAAA,aA4DvGN,aA5DuG,GA4DvFM,SA5DuF;AAAA,aAiEvGL,SAjEuG,GAiE3FK,SAjE2F;AAAA,aAqEvGJ,eArEuG,GAqErFI,SArEqF;AAAA,aA0EvGH,OA1EuG,GA0E7FG,SA1E6F;AAAA,aA8EvGF,UA9EuG,GA8E1FE,SA9E0F;AAAA,aAkFvGD,gBAlFuG,GAkFpFC,SAlFoF;;;AAOnG,aAAK,SAAL,IAAkBP,OAAlB,CAA0B,KAAK,eAAL,IAAwBC,aAAxB,CAAsC,KAAK,WAAL,IAAoBC,SAApB,CAA8B,KAAK,iBAAL,IAA0BC,eAA1B,CAA0C,KAAK,SAAL,IAAkBC,OAAlB,CAA0B,KAAK,YAAL,IAAqBC,UAArB,CAAgC,KAAK,kBAAL,IAA2BC,gBAA3B;AAGrM;;AAED;;;;;;;;;;;4CAO2BE,I,EAAMC,G,EAAK;AAClC,gBAAID,IAAJ,EAAU;AACNC,sBAAMA,OAAO,IAAIV,UAAJ,EAAb;;AAMA,oBAAIS,KAAKE,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AAChCD,wBAAI,SAAJ,IAAiBE,oBAAUC,aAAV,CAAwBJ,KAAK,SAAL,CAAxB,EAAyC,QAAzC,CAAjB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,eAApB,CAAJ,EAA0C;AACtCD,wBAAI,eAAJ,IAAuBI,oBAAUC,mBAAV,CAA8BN,KAAK,eAAL,CAA9B,CAAvB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,WAApB,CAAJ,EAAsC;AAClCD,wBAAI,WAAJ,IAAmBE,oBAAUC,aAAV,CAAwBJ,KAAK,WAAL,CAAxB,EAA2C,QAA3C,CAAnB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,iBAApB,CAAJ,EAA4C;AACxCD,wBAAI,iBAAJ,IAAyBI,oBAAUC,mBAAV,CAA8BN,KAAK,iBAAL,CAA9B,CAAzB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AAChCD,wBAAI,SAAJ,IAAiBE,oBAAUC,aAAV,CAAwBJ,KAAK,SAAL,CAAxB,EAAyC,CAACO,mBAAD,CAAzC,CAAjB;AACH;AACD,oBAAIP,KAAKE,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACnCD,wBAAI,YAAJ,IAAoBI,oBAAUC,mBAAV,CAA8BN,KAAK,YAAL,CAA9B,CAApB;AACH;AACD,oBAAIA,KAAKE,cAAL,CAAoB,kBAApB,CAAJ,EAA6C;AACzCD,wBAAI,kBAAJ,IAA0BI,oBAAUC,mBAAV,CAA8BN,KAAK,kBAAL,CAA9B,CAA1B;AACH;AACJ;AACD,mBAAOC,GAAP;AACH;;AAED;;;;;AAKA;;;;AAIA;;;;;AAKA;;;;AAIA;;;;;AAKA;;;;AAIA;;;;;;;;;kBA7FiBV,U","file":"AccountDTO.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 0.7.15\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport MosaicDTO from './MosaicDTO';\nimport UInt64DTO from './UInt64DTO';\n\n\n\n\n\n/**\n* The AccountDTO model module.\n* @module model/AccountDTO\n* @version 0.7.15\n*/\nexport default class AccountDTO {\n    /**\n    * Constructs a new <code>AccountDTO</code>.\n    * @alias module:model/AccountDTO\n    * @class\n    * @param address {String} The account unique address in hexadecimal. \n    * @param addressHeight {module:model/UInt64DTO} \n    * @param publicKey {String} The public key of an account can be used to verify signatures of the account. Only accounts that have already published a transaction have a public key assigned to the account. Otherwise, the field is null. \n    * @param publicKeyHeight {module:model/UInt64DTO} \n    * @param mosaics {Array.<module:model/MosaicDTO>} The list of mosaics the account owns. The amount is represented in absolute amount. Thus a balance of 123456789 for a mosaic with divisibility 6 (absolute) means the account owns 123.456789 instead. \n    * @param importance {module:model/UInt64DTO} \n    * @param importanceHeight {module:model/UInt64DTO} \n    */\n\n    constructor(address, addressHeight, publicKey, publicKeyHeight, mosaics, importance, importanceHeight) {\n        \n\n        \n\n\n\n        this['address'] = address;this['addressHeight'] = addressHeight;this['publicKey'] = publicKey;this['publicKeyHeight'] = publicKeyHeight;this['mosaics'] = mosaics;this['importance'] = importance;this['importanceHeight'] = importanceHeight;\n\n        \n    }\n\n    /**\n    * Constructs a <code>AccountDTO</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/AccountDTO} obj Optional instance to populate.\n    * @return {module:model/AccountDTO} The populated <code>AccountDTO</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new AccountDTO();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('address')) {\n                obj['address'] = ApiClient.convertToType(data['address'], 'String');\n            }\n            if (data.hasOwnProperty('addressHeight')) {\n                obj['addressHeight'] = UInt64DTO.constructFromObject(data['addressHeight']);\n            }\n            if (data.hasOwnProperty('publicKey')) {\n                obj['publicKey'] = ApiClient.convertToType(data['publicKey'], 'String');\n            }\n            if (data.hasOwnProperty('publicKeyHeight')) {\n                obj['publicKeyHeight'] = UInt64DTO.constructFromObject(data['publicKeyHeight']);\n            }\n            if (data.hasOwnProperty('mosaics')) {\n                obj['mosaics'] = ApiClient.convertToType(data['mosaics'], [MosaicDTO]);\n            }\n            if (data.hasOwnProperty('importance')) {\n                obj['importance'] = UInt64DTO.constructFromObject(data['importance']);\n            }\n            if (data.hasOwnProperty('importanceHeight')) {\n                obj['importanceHeight'] = UInt64DTO.constructFromObject(data['importanceHeight']);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * The account unique address in hexadecimal. \n    * @member {String} address\n    */\n    address = undefined;\n    /**\n    * @member {module:model/UInt64DTO} addressHeight\n    */\n    addressHeight = undefined;\n    /**\n    * The public key of an account can be used to verify signatures of the account. Only accounts that have already published a transaction have a public key assigned to the account. Otherwise, the field is null. \n    * @member {String} publicKey\n    */\n    publicKey = undefined;\n    /**\n    * @member {module:model/UInt64DTO} publicKeyHeight\n    */\n    publicKeyHeight = undefined;\n    /**\n    * The list of mosaics the account owns. The amount is represented in absolute amount. Thus a balance of 123456789 for a mosaic with divisibility 6 (absolute) means the account owns 123.456789 instead. \n    * @member {Array.<module:model/MosaicDTO>} mosaics\n    */\n    mosaics = undefined;\n    /**\n    * @member {module:model/UInt64DTO} importance\n    */\n    importance = undefined;\n    /**\n    * @member {module:model/UInt64DTO} importanceHeight\n    */\n    importanceHeight = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"]}