'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
opyright 2019 NEM

icensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * you may not use this file except in compliance with the License.
ou may obtain a copy of the License at

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *     http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.

/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _UInt64DTO = require('./UInt64DTO');

var _UInt64DTO2 = _interopRequireDefault(_UInt64DTO);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The AccountMetaDTO model module.
* @module model/AccountMetaDTO
* @version 0.7.15
*/
var AccountMetaDTO = function () {
    /**
    * Constructs a new <code>AccountMetaDTO</code>.
    * @alias module:model/AccountMetaDTO
    * @class
    * @param height {module:model/UInt64DTO} 
    * @param hash {String} 
    * @param merkleComponentHash {String} 
    * @param index {Number} 
    * @param id {String} 
    */

    function AccountMetaDTO(height, hash, merkleComponentHash, index, id) {
        _classCallCheck(this, AccountMetaDTO);

        this.height = undefined;
        this.hash = undefined;
        this.merkleComponentHash = undefined;
        this.index = undefined;
        this.id = undefined;


        this['height'] = height;this['hash'] = hash;this['merkleComponentHash'] = merkleComponentHash;this['index'] = index;this['id'] = id;
    }

    /**
    * Constructs a <code>AccountMetaDTO</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/AccountMetaDTO} obj Optional instance to populate.
    * @return {module:model/AccountMetaDTO} The populated <code>AccountMetaDTO</code> instance.
    */


    _createClass(AccountMetaDTO, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new AccountMetaDTO();

                if (data.hasOwnProperty('height')) {
                    obj['height'] = _UInt64DTO2.default.constructFromObject(data['height']);
                }
                if (data.hasOwnProperty('hash')) {
                    obj['hash'] = _ApiClient2.default.convertToType(data['hash'], 'String');
                }
                if (data.hasOwnProperty('merkleComponentHash')) {
                    obj['merkleComponentHash'] = _ApiClient2.default.convertToType(data['merkleComponentHash'], 'String');
                }
                if (data.hasOwnProperty('index')) {
                    obj['index'] = _ApiClient2.default.convertToType(data['index'], 'Number');
                }
                if (data.hasOwnProperty('id')) {
                    obj['id'] = _ApiClient2.default.convertToType(data['id'], 'String');
                }
            }
            return obj;
        }

        /**
        * @member {module:model/UInt64DTO} height
        */

        /**
        * @member {String} hash
        */

        /**
        * @member {String} merkleComponentHash
        */

        /**
        * @member {Number} index
        */

        /**
        * @member {String} id
        */

    }]);

    return AccountMetaDTO;
}();

exports.default = AccountMetaDTO;
//# sourceMappingURL=AccountMetaDTO.js.map