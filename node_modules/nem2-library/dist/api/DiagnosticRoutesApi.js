'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
opyright 2019 NEM

icensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

nless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
either express or implied.
ee the License for the specific language governing permissions and
limitations under the License.

/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _ServerDTO = require('../model/ServerDTO');

var _ServerDTO2 = _interopRequireDefault(_ServerDTO);

var _StorageInfoDTO = require('../model/StorageInfoDTO');

var _StorageInfoDTO2 = _interopRequireDefault(_StorageInfoDTO);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* DiagnosticRoutes service.
* @module api/DiagnosticRoutesApi
* @version 0.7.15
*/
var DiagnosticRoutesApi = function () {

  /**
  * Constructs a new DiagnosticRoutesApi. 
  * @alias module:api/DiagnosticRoutesApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function DiagnosticRoutesApi(apiClient) {
    _classCallCheck(this, DiagnosticRoutesApi);

    this.apiClient = apiClient || _ApiClient2.default.instance;
  }

  /**
   * Get the storage information of the node
   * Returns diagnostic information about the node storage.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/StorageInfoDTO} and HTTP response
   */


  _createClass(DiagnosticRoutesApi, [{
    key: 'getDiagnosticStorageWithHttpInfo',
    value: function getDiagnosticStorageWithHttpInfo() {
      var postBody = null;

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _StorageInfoDTO2.default;

      return this.apiClient.callApi('/diagnostic/storage', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Get the storage information of the node
     * Returns diagnostic information about the node storage.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/StorageInfoDTO}
     */

  }, {
    key: 'getDiagnosticStorage',
    value: function getDiagnosticStorage() {
      return this.getDiagnosticStorageWithHttpInfo().then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Get the version of the running rest component
     * Returns the version of the running rest component.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ServerDTO} and HTTP response
     */

  }, {
    key: 'getServerInfoWithHttpInfo',
    value: function getServerInfoWithHttpInfo() {
      var postBody = null;

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _ServerDTO2.default;

      return this.apiClient.callApi('/diagnostic/server', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
    }

    /**
     * Get the version of the running rest component
     * Returns the version of the running rest component.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ServerDTO}
     */

  }, {
    key: 'getServerInfo',
    value: function getServerInfo() {
      return this.getServerInfoWithHttpInfo().then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);

  return DiagnosticRoutesApi;
}();

exports.default = DiagnosticRoutesApi;
//# sourceMappingURL=DiagnosticRoutesApi.js.map