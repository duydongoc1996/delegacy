{"version":3,"sources":["../../src/api/DiagnosticRoutesApi.js"],"names":["DiagnosticRoutesApi","apiClient","ApiClient","instance","postBody","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","StorageInfoDTO","callApi","getDiagnosticStorageWithHttpInfo","then","response_and_data","data","ServerDTO","getServerInfoWithHttpInfo"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;AAcA;;;;AACA;;;;AACA;;;;;;;;AAEA;;;;;IAKqBA,mB;;AAEjB;;;;;;;AAOA,+BAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,aAAaC,oBAAUC,QAAxC;AACH;;AAID;;;;;;;;;uDAKmC;AACjC,UAAIC,WAAW,IAAf;;AAGA,UAAIC,aAAa,EAAjB;AAEA,UAAIC,cAAc,EAAlB;AAEA,UAAIC,eAAe,EAAnB;AAEA,UAAIC,aAAa,EAAjB;;AAGA,UAAIC,YAAY,EAAhB;AACA,UAAIC,eAAe,EAAnB;AACA,UAAIC,UAAU,CAAC,kBAAD,CAAd;AACA,UAAIC,aAAaC,wBAAjB;;AAEA,aAAO,KAAKZ,SAAL,CAAea,OAAf,CACL,qBADK,EACkB,KADlB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,CAAP;AAKD;;AAED;;;;;;;;2CAKuB;AACrB,aAAO,KAAKG,gCAAL,GACJC,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,kBAAkBC,IAAzB;AACD,OAHI,CAAP;AAID;;AAGD;;;;;;;;gDAK4B;AAC1B,UAAId,WAAW,IAAf;;AAGA,UAAIC,aAAa,EAAjB;AAEA,UAAIC,cAAc,EAAlB;AAEA,UAAIC,eAAe,EAAnB;AAEA,UAAIC,aAAa,EAAjB;;AAGA,UAAIC,YAAY,EAAhB;AACA,UAAIC,eAAe,EAAnB;AACA,UAAIC,UAAU,CAAC,kBAAD,CAAd;AACA,UAAIC,aAAaO,mBAAjB;;AAEA,aAAO,KAAKlB,SAAL,CAAea,OAAf,CACL,oBADK,EACiB,KADjB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,CAAP;AAKD;;AAED;;;;;;;;oCAKgB;AACd,aAAO,KAAKQ,yBAAL,GACJJ,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,kBAAkBC,IAAzB;AACD,OAHI,CAAP;AAID;;;;;;kBAlGgBlB,mB","file":"DiagnosticRoutesApi.js","sourcesContent":["/*\n * Copyright 2019 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Catapult REST API Reference\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 0.7.15\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport ServerDTO from '../model/ServerDTO';\nimport StorageInfoDTO from '../model/StorageInfoDTO';\n\n/**\n* DiagnosticRoutes service.\n* @module api/DiagnosticRoutesApi\n* @version 0.7.15\n*/\nexport default class DiagnosticRoutesApi {\n\n    /**\n    * Constructs a new DiagnosticRoutesApi. \n    * @alias module:api/DiagnosticRoutesApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Get the storage information of the node\n     * Returns diagnostic information about the node storage.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/StorageInfoDTO} and HTTP response\n     */\n    getDiagnosticStorageWithHttpInfo() {\n      let postBody = null;\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = StorageInfoDTO;\n\n      return this.apiClient.callApi(\n        '/diagnostic/storage', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get the storage information of the node\n     * Returns diagnostic information about the node storage.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/StorageInfoDTO}\n     */\n    getDiagnosticStorage() {\n      return this.getDiagnosticStorageWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Get the version of the running rest component\n     * Returns the version of the running rest component.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ServerDTO} and HTTP response\n     */\n    getServerInfoWithHttpInfo() {\n      let postBody = null;\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = ServerDTO;\n\n      return this.apiClient.callApi(\n        '/diagnostic/server', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get the version of the running rest component\n     * Returns the version of the running rest component.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ServerDTO}\n     */\n    getServerInfo() {\n      return this.getServerInfoWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"]}